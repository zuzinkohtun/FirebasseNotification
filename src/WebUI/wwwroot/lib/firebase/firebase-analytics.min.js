import{registerVersion as e,_registerComponent as t,_getProvider,getApp as n}from"https://www.gstatic.com/firebasejs/10.6.0/firebase-app.js";var r;!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(r=r||{});const a={debug:r.DEBUG,verbose:r.VERBOSE,info:r.INFO,warn:r.WARN,error:r.ERROR,silent:r.SILENT},i=r.INFO,o={[r.DEBUG]:"log",[r.VERBOSE]:"log",[r.INFO]:"info",[r.WARN]:"warn",[r.ERROR]:"error"},defaultLogHandler=(e,t,...n)=>{if(!(t<e.logLevel)){var a=(new Date).toISOString(),r=o[t];if(!r)throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);console[r](`[${a}]  ${e.name}:`,...n)}};function isBrowserExtension(){var e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}function isIndexedDBAvailable(){try{return"object"==typeof indexedDB}catch(e){return!1}}function validateIndexedDBOpenable(){return new Promise((t,n)=>{try{let e=!0;const a="validate-browser-context-for-indexeddb-analytics-module",r=self.indexedDB.open(a);r.onsuccess=()=>{r.result.close(),e||self.indexedDB.deleteDatabase(a),t(!0)},r.onupgradeneeded=()=>{e=!1},r.onerror=()=>{var e;n((null==(e=r.error)?void 0:e.message)||"")}}catch(t){n(t)}})}function areCookiesEnabled(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}class FirebaseError extends Error{constructor(e,t,n){super(t),this.code=e,this.customData=n,this.name="FirebaseError",Object.setPrototypeOf(this,FirebaseError.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,ErrorFactory.prototype.create)}}class ErrorFactory{constructor(e,t,n){this.service=e,this.serviceName=t,this.errors=n}create(e,...t){var a,t=t[0]||{},n=this.service+"/"+e,e=this.errors[e],e=e?(a=t,e.replace(s,(e,t)=>{var n=a[t];return null!=n?String(n):`<${t}?>`})):"Error",e=this.serviceName+`: ${e} (${n}).`;return new FirebaseError(n,e,t)}}const s=/\{\$([^}]+)}/g;function deepEqual(e,t){if(e===t)return!0;const n=Object.keys(e),a=Object.keys(t);for(const r of n){if(!a.includes(r))return!1;const n=e[r],i=t[r];if(isObject(n)&&isObject(i)){if(!deepEqual(n,i))return!1}else if(n!==i)return!1}for(const e of a)if(!n.includes(e))return!1;return!0}function isObject(e){return null!==e&&"object"==typeof e}function calculateBackoffMillis(e,t=1e3,n=2){t*=Math.pow(n,e),n=Math.round(.5*t*(Math.random()-.5)*2);return Math.min(144e5,t+n)}function getModularInstance(e){return e&&e._delegate?e._delegate:e}class Component{constructor(e,t,n){this.name=e,this.instanceFactory=t,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}let c,l;const u=new WeakMap,d=new WeakMap,p=new WeakMap,f=new WeakMap,g=new WeakMap;let h={get(e,t,n){if(e instanceof IDBTransaction){if("done"===t)return d.get(e);if("objectStoreNames"===t)return e.objectStoreNames||p.get(e);if("store"===t)return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return wrap(e[t])},set:(e,t,n)=>(e[t]=n,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function wrapFunction(n){return n!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(l=l||[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey]).includes(n)?function(...e){return n.apply(unwrap(this),e),wrap(u.get(this))}:function(...e){return wrap(n.apply(unwrap(this),e))}:function(e,...t){t=n.call(unwrap(this),e,...t);return p.set(t,e.sort?e.sort():[e]),wrap(t)}}function transformCachableValue(e){return"function"==typeof e?wrapFunction(e):(e instanceof IDBTransaction&&(i=e,d.has(i)||(t=new Promise((e,t)=>{const n=()=>{i.removeEventListener("complete",a),i.removeEventListener("error",r),i.removeEventListener("abort",r)},a=()=>{e(),n()},r=()=>{t(i.error||new DOMException("AbortError","AbortError")),n()};i.addEventListener("complete",a),i.addEventListener("error",r),i.addEventListener("abort",r)}),d.set(i,t))),n=e,(c=c||[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]).some(e=>n instanceof e)?new Proxy(e,h):e);var i,t,n}function wrap(e){if(e instanceof IDBRequest){var i=e;const n=new Promise((e,t)=>{const n=()=>{i.removeEventListener("success",a),i.removeEventListener("error",r)},a=()=>{e(wrap(i.result)),n()},r=()=>{t(i.error),n()};i.addEventListener("success",a),i.addEventListener("error",r)});return n.then(e=>{e instanceof IDBCursor&&u.set(e,i)}).catch(()=>{}),g.set(n,i),n}if(f.has(e))return f.get(e);var t=transformCachableValue(e);return t!==e&&(f.set(e,t),g.set(t,e)),t}const unwrap=e=>g.get(e),m=["get","getKey","getAll","getAllKeys","count"],y=["put","add","delete","clear"],w=new Map;function getMethod(e,t){if(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t){if(w.get(t))return w.get(t);const a=t.replace(/FromIndex$/,""),r=t!==a,i=y.includes(a);return a in(r?IDBIndex:IDBObjectStore).prototype&&(i||m.includes(a))?(e=async function(e,...t){e=this.transaction(e,i?"readwrite":"readonly");let n=e.store;return r&&(n=n.index(t.shift())),(await Promise.all([n[a](...t),i&&e.done]))[0]},w.set(t,e),e):void 0}}!function(e){h=e(h)}(a=>({...a,get:(e,t,n)=>getMethod(e,t)||a.get(e,t,n),has:(e,t)=>!!getMethod(e,t)||a.has(e,t)}));const I="@firebase/installations",v=new ErrorFactory("installations","Installations",{"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."});function isServerError(e){return e instanceof FirebaseError&&e.code.includes("request-failed")}function getInstallationsEndpoint({projectId:e}){return`https://firebaseinstallations.googleapis.com/v1/projects/${e}/installations`}function extractAuthTokenInfoFromResponse(e){return{token:e.token,requestStatus:2,expiresIn:(e=e.expiresIn,Number(e.replace("s","000"))),creationTime:Date.now()}}async function getErrorFromResponse(e,t){t=(await t.json()).error;return v.create("request-failed",{requestName:e,serverCode:t.code,serverMessage:t.message,serverStatus:t.status})}function getHeaders$1({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function getHeadersWithAuth(e,{refreshToken:t}){const n=getHeaders$1(e);return n.append("Authorization","FIS_v2 "+t),n}async function retryIfServerError(e){var t=await e();return 500<=t.status&&t.status<600?e():t}function sleep(t){return new Promise(e=>{setTimeout(e,t)})}const b=/^[cdef][\w-]{21}$/;function generateFid(){try{const n=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(n),n[0]=112+n[0]%16;t=n;var e=btoa(String.fromCharCode(...t)).replace(/\+/g,"-").replace(/\//g,"_").substr(0,22);return b.test(e)?e:""}catch(e){return""}var t}function getKey(e){return e.appName+"!"+e.appId}const E=new Map;function fidChanged(e,t){e=getKey(e);callFidChangeCallbacks(e,t);{!T&&"BroadcastChannel"in self&&((T=new BroadcastChannel("[Firebase] FID Change")).onmessage=e=>{callFidChangeCallbacks(e.data.key,e.data.fid)});const n=T;return n&&n.postMessage({key:e,fid:t}),void(0===E.size&&T&&(T.close(),T=null))}}function callFidChangeCallbacks(e,t){var n=E.get(e);if(n)for(const e of n)e(t)}let T=null;const C="firebase-installations-store";let D=null;function getDbPromise(){return D=D||function(e,t,{blocked:n,upgrade:a,blocking:r,terminated:i}){const o=indexedDB.open(e,t),s=wrap(o);return a&&o.addEventListener("upgradeneeded",e=>{a(wrap(o.result),e.oldVersion,e.newVersion,wrap(o.transaction),e)}),n&&o.addEventListener("blocked",e=>n(e.oldVersion,e.newVersion,e)),s.then(e=>{i&&e.addEventListener("close",()=>i()),r&&e.addEventListener("versionchange",e=>r(e.oldVersion,e.newVersion,e))}).catch(()=>{}),s}("firebase-installations-database",1,{upgrade:(e,t)=>{0===t&&e.createObjectStore(C)}})}async function set(e,t){const n=getKey(e),a=(await getDbPromise()).transaction(C,"readwrite"),r=a.objectStore(C),i=await r.get(n);return await r.put(t,n),await a.done,i&&i.fid===t.fid||fidChanged(e,t.fid),t}async function remove(e){const t=getKey(e),n=(await getDbPromise()).transaction(C,"readwrite");await n.objectStore(C).delete(t),await n.done}async function update(e,t){const n=getKey(e),a=(await getDbPromise()).transaction(C,"readwrite"),r=a.objectStore(C),i=await r.get(n),o=t(i);return void 0===o?await r.delete(n):await r.put(o,n),await a.done,!o||i&&i.fid===o.fid||fidChanged(e,o.fid),o}async function getInstallationEntry(t){let n;var e=await update(t.appConfig,e=>{e=clearTimedOutRequest(e||{fid:generateFid(),registrationStatus:0}),e=function(e,t){if(0!==t.registrationStatus)return 1===t.registrationStatus?{installationEntry:t,registrationPromise:waitUntilFidRegistration(e)}:{installationEntry:t};if(!navigator.onLine)return{installationEntry:t,registrationPromise:Promise.reject(v.create("app-offline"))};t={fid:t.fid,registrationStatus:1,registrationTime:Date.now()};return{installationEntry:t,registrationPromise:async function(t,n){try{var e=await async function({appConfig:e,heartbeatServiceProvider:t},{fid:n}){const a=getInstallationsEndpoint(e),r=getHeaders$1(e),i=t.getImmediate({optional:!0});if(i){const e=await i.getHeartbeatsHeader();e&&r.append("x-firebase-client",e)}const o={fid:n,authVersion:"FIS_v2",appId:e.appId,sdkVersion:"w:0.6.4"},s={method:"POST",headers:r,body:JSON.stringify(o)},c=await retryIfServerError(()=>fetch(a,s));if(c.ok){const e=await c.json();return{fid:e.fid||n,registrationStatus:2,refreshToken:e.refreshToken,authToken:extractAuthTokenInfoFromResponse(e.authToken)}}throw await getErrorFromResponse("Create Installation",c)}(t,n);return set(t.appConfig,e)}catch(e){throw isServerError(e)&&409===e.customData.serverCode?await remove(t.appConfig):await set(t.appConfig,{fid:n.fid,registrationStatus:0}),e}}(e,t)}}(t,e);return n=e.registrationPromise,e.installationEntry});return""===e.fid?{installationEntry:await n}:{installationEntry:e,registrationPromise:n}}async function waitUntilFidRegistration(e){let t=await updateInstallationRequest(e.appConfig);for(;1===t.registrationStatus;)await sleep(100),t=await updateInstallationRequest(e.appConfig);if(0!==t.registrationStatus)return t;{const{installationEntry:t,registrationPromise:n}=await getInstallationEntry(e);return n||t}}function updateInstallationRequest(e){return update(e,e=>{if(e)return clearTimedOutRequest(e);throw v.create("installation-not-found")})}function clearTimedOutRequest(e){return 1===(t=e).registrationStatus&&t.registrationTime+1e4<Date.now()?{fid:e.fid,registrationStatus:0}:e;var t}async function generateAuthTokenRequest({appConfig:e,heartbeatServiceProvider:t},n){[o,s]=[e,n["fid"]];const a=getInstallationsEndpoint(o)+`/${s}/authTokens:generate`,r=getHeadersWithAuth(e,n),i=t.getImmediate({optional:!0});var o,s;if(i){const e=await i.getHeartbeatsHeader();e&&r.append("x-firebase-client",e)}const c={installation:{sdkVersion:"w:0.6.4",appId:e.appId}},l={method:"POST",headers:r,body:JSON.stringify(c)},u=await retryIfServerError(()=>fetch(a,l));if(u.ok)return extractAuthTokenInfoFromResponse(await u.json());throw await getErrorFromResponse("Generate Auth Token",u)}async function refreshAuthToken(r,i=!1){let o;var e=await update(r.appConfig,e=>{if(!isEntryRegistered(e))throw v.create("not-registered");var t,n,a=e.authToken;if(!(i||(2!==(t=a).requestStatus||(t=t,(n=Date.now())<t.creationTime||t.creationTime+t.expiresIn<n+36e5))))return e;if(1===a.requestStatus)return o=async function(e,t){let n=await updateAuthTokenRequest(e.appConfig);for(;1===n.authToken.requestStatus;)await sleep(100),n=await updateAuthTokenRequest(e.appConfig);var a=n.authToken;return 0===a.requestStatus?refreshAuthToken(e,t):a}(r,i),e;{if(!navigator.onLine)throw v.create("app-offline");t=e,n={requestStatus:1,requestTime:Date.now()};const i=Object.assign(Object.assign({},t),{authToken:n});return o=async function(t,n){try{var e=await generateAuthTokenRequest(t,n),a=Object.assign(Object.assign({},n),{authToken:e});return await set(t.appConfig,a),e}catch(e){throw!isServerError(e)||401!==e.customData.serverCode&&404!==e.customData.serverCode?(a=Object.assign(Object.assign({},n),{authToken:{requestStatus:0}}),await set(t.appConfig,a)):await remove(t.appConfig),e}}(r,i),i}});return o?await o:e.authToken}function updateAuthTokenRequest(e){return update(e,e=>{if(isEntryRegistered(e))return 1===(t=e.authToken).requestStatus&&t.requestTime+1e4<Date.now()?Object.assign(Object.assign({},e),{authToken:{requestStatus:0}}):e;throw v.create("not-registered");var t})}function isEntryRegistered(e){return void 0!==e&&2===e.registrationStatus}async function getToken(e,t=!1){var n=e;return(n=(await getInstallationEntry(n)).registrationPromise)&&await n,await 0,(await refreshAuthToken(e,t)).token}function getMissingValueError(e){return v.create("missing-app-config-values",{valueName:e})}const publicFactory=e=>{e=e.getProvider("app").getImmediate();return{app:e,appConfig:function(e){if(!e||!e.options)throw getMissingValueError("App Configuration");if(!e.name)throw getMissingValueError("App Name");for(const t of["projectId","apiKey","appId"])if(!e.options[t])throw getMissingValueError(t);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}(e),heartbeatServiceProvider:_getProvider(e,"heartbeat"),_delete:()=>Promise.resolve()}},internalFactory=e=>{const t=e.getProvider("app").getImmediate(),n=_getProvider(t,"installations").getImmediate();return{getId:()=>async function(e){const t=e,{installationEntry:n,registrationPromise:a}=await getInstallationEntry(t);return(a||refreshAuthToken(t)).catch(console.error),n.fid}(n),getToken:e=>getToken(n,e)}},S=(t(new Component("installations",publicFactory,"PUBLIC")),t(new Component("installations-internal",internalFactory,"PRIVATE")),e(I,"0.6.4"),e(I,"0.6.4","esm2017"),"https://www.googletagmanager.com/gtag/js"),A=new class{constructor(e){this.name=e,this._logLevel=i,this._logHandler=defaultLogHandler,this._userLogHandler=null}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in r))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?a[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,r.DEBUG,...e),this._logHandler(this,r.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,r.VERBOSE,...e),this._logHandler(this,r.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,r.INFO,...e),this._logHandler(this,r.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,r.WARN,...e),this._logHandler(this,r.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,r.ERROR,...e),this._logHandler(this,r.ERROR,...e)}}("@firebase/analytics"),k=new ErrorFactory("analytics","Analytics",{"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."});function createGtagTrustedTypesScriptURL(e){return e.startsWith(S)?e:(e=k.create("invalid-gtag-resource",{gtagURL:e}),A.warn(e.message),"")}function promiseAllSettled(e){return Promise.all(e.map(e=>e.catch(e=>e)))}function insertScriptTag(e,t){const n=function(e,t){let n;return n=window.trustedTypes?window.trustedTypes.createPolicy(e,t):n}("firebase-js-sdk-policy",{createScriptURL:createGtagTrustedTypesScriptURL}),a=document.createElement("script"),r=S+`?l=${e}&id=`+t;a.src=n?null==n?void 0:n.createScriptURL(r):r,a.async=!0,document.head.appendChild(a)}function wrapGtag(g,h,m,w){return async function(e,...t){try{if("event"===e){const[w,e]=t;var n=g,a=h,r=m,i=w,o=e;try{let t=[];if(o&&o.send_to){let e=o.send_to;Array.isArray(e)||(e=[e]);const i=await promiseAllSettled(r);for(const r of e){const n=i.find(e=>e.measurementId===r),o=n&&a[n.appId];if(!o){t=[];break}t.push(o)}}0===t.length&&(t=Object.values(a)),await Promise.all(t),n("event",i,o||{})}catch(n){A.error(n)}await 0}else if("config"===e){const[e,f]=t;var s=g,c=h,l=m,u=w,d=e,p=f;u=u[d];try{if(u)await c[u];else{const s=(await promiseAllSettled(l)).find(e=>e.measurementId===d);s&&await c[s.appId]}}catch(s){A.error(s)}s("config",d,p),await 0}else if("consent"===e){const[h]=t;g("consent","update",h)}else if("get"===e){const[h,m,w]=t;g("get",h,m,w)}else if("set"===e){const[h]=t;g("set",h)}else g(e,...t)}catch(e){A.error(e)}}}const R=new class{constructor(e={},t=1e3){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}};function getHeaders(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function fetchDynamicConfigWithRetry(e,t=R,n){var{appId:e,apiKey:a,measurementId:r}=e.options;if(!e)throw k.create("no-app-id");if(!a){if(r)return{measurementId:r,appId:e};throw k.create("no-api-key")}const i=t.getThrottleMetadata(e)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new AnalyticsAbortSignal;return setTimeout(async()=>{o.abort()},void 0!==n?n:6e4),attemptFetchDynamicConfigWithRetry({appId:e,apiKey:a,measurementId:r},i,o,t)}async function attemptFetchDynamicConfigWithRetry(e,{throttleEndTimeMillis:t,backoffCount:n},a,r=R){var i,o,{appId:s,measurementId:c}=e;try{i=a,o=t,await new Promise((e,t)=>{const n=Math.max(o-Date.now(),0),a=setTimeout(e,n);i.addEventListener(()=>{clearTimeout(a),t(k.create("fetch-throttle",{throttleEndTimeMillis:o}))})})}catch(e){if(c)return A.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${c} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:s,measurementId:c};throw e}try{const t=await async function(t){var n;const{appId:a,apiKey:e}=t,r={method:"GET",headers:getHeaders(e)},i="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",a),o=await fetch(i,r);if(200===o.status||304===o.status)return o.json();{let e="";try{const a=await o.json();null!=(n=a.error)&&n.message&&(e=a.error.message)}catch(t){}throw k.create("config-fetch-failed",{httpStatus:o.status,responseMessage:e})}}(e);return r.deleteThrottleMetadata(s),t}catch(t){var l=t;if(!function(e){if(e instanceof FirebaseError&&e.customData)return e=Number(e.customData.httpStatus),429===e||500===e||503===e||504===e}(l)){if(r.deleteThrottleMetadata(s),c)return A.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${c} provided in the "measurementId" field in the local Firebase config. [${null==l?void 0:l.message}]`),{appId:s,measurementId:c};throw t}l=503===Number(null==(c=null==l?void 0:l.customData)?void 0:c.httpStatus)?calculateBackoffMillis(n,r.intervalMillis,30):calculateBackoffMillis(n,r.intervalMillis),c={throttleEndTimeMillis:Date.now()+l,backoffCount:n+1};return r.setThrottleMetadata(s,c),A.debug(`Calling attemptFetch again in ${l} millis`),attemptFetchDynamicConfigWithRetry(e,c,a,r)}}class AnalyticsAbortSignal{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach(e=>e())}}let F,O;function _setConsentDefaultForInit(e){O=e}function _setDefaultEventParametersForInit(e){F=e}async function _initializeAnalytics(t,e,n,a,r,i,o){const s=fetchDynamicConfigWithRetry(t);s.then(e=>{n[e.measurementId]=e.appId,t.options.measurementId&&e.measurementId!==t.options.measurementId&&A.warn(`The measurement ID in the local Firebase config (${t.options.measurementId}) does not match the measurement ID fetched from the server (${e.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)}).catch(e=>A.error(e)),e.push(s);var e=async function(){if(!isIndexedDBAvailable())return A.warn(k.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await validateIndexedDBOpenable()}catch(e){return A.warn(k.create("indexeddb-unavailable",{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}().then(e=>e?a.getId():void 0),[e,c]=await Promise.all([s,e]);!function(e){var t=window.document.getElementsByTagName("script");for(const n of Object.values(t))if(n.src&&n.src.includes(S)&&n.src.includes(e))return n}(i)&&insertScriptTag(i,e.measurementId),O&&(r("consent","default",O),_setConsentDefaultForInit(void 0)),r("js",new Date);const l=null!=(i=null==o?void 0:o.config)?i:{};return l.origin="firebase",l.update=!0,null!=c&&(l.firebase_id=c),r("config",e.measurementId,l),F&&(r("set",F),_setDefaultEventParametersForInit(void 0)),e.measurementId}class AnalyticsService{constructor(e){this.app=e}_delete(){return delete P[this.app.options.appId],Promise.resolve()}}let P={},M=[];const L={};let B,j,$="dataLayer",x="gtag",_=!1;function settings(e){if(_)throw k.create("already-initialized");e.dataLayerName&&($=e.dataLayerName),e.gtagName&&(x=e.gtagName)}function factory(e,t,n){{const i=[];isBrowserExtension()&&i.push("This is a browser extension environment."),areCookiesEnabled()||i.push("Cookies are not available."),0<i.length&&(a=i.map((e,t)=>`(${t+1}) `+e).join(" "),a=k.create("invalid-analytics-context",{errorInfo:a}),A.warn(a.message))}var a=e.options.appId;if(!a)throw k.create("no-app-id");if(!e.options.apiKey){if(!e.options.measurementId)throw k.create("no-api-key");A.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=P[a])throw k.create("already-exists",{id:a});if(!_){{var r=$;let e=[];Array.isArray(window[r])?e=window[r]:window[r]=e,e}const{wrappedGtag:e,gtagCore:t}=function(e,t,n,a,r){let i=function(){window[a].push(arguments)};return window[r]&&"function"==typeof window[r]&&(i=window[r]),window[r]=wrapGtag(i,e,t,n),{gtagCore:i,wrappedGtag:window[r]}}(P,M,L,$,x);j=e,B=t,_=!0}return P[a]=_initializeAnalytics(e,M,L,t,B,$,n),new AnalyticsService(e)}function getAnalytics(e=n()){e=getModularInstance(e);const t=_getProvider(e,"analytics");return t.isInitialized()?t.getImmediate():initializeAnalytics(e)}function initializeAnalytics(e,t={}){const n=_getProvider(e,"analytics");if(n.isInitialized()){const e=n.getImmediate();if(deepEqual(t,n.getOptions()))return e;throw k.create("already-initialized")}return n.initialize({options:t})}async function isSupported(){if(isBrowserExtension())return!1;if(!areCookiesEnabled())return!1;if(!isIndexedDBAvailable())return!1;try{return await validateIndexedDBOpenable()}catch(e){return!1}}function setCurrentScreen(e,t,n){e=getModularInstance(e),async function(e,t,n,a){return a&&a.global?(e("set",{screen_name:n}),Promise.resolve()):void e("config",await t,{update:!0,screen_name:n})}(j,P[e.app.options.appId],t,n).catch(e=>A.error(e))}async function getGoogleAnalyticsClientId(e){return e=getModularInstance(e),async function(e,t){const a=await t;return new Promise((t,n)=>{e("get",a,"client_id",e=>{e||n(k.create("no-client-id")),t(e)})})}(j,P[e.app.options.appId])}function setUserId(e,t,n){e=getModularInstance(e),async function(e,t,n,a){return a&&a.global?(e("set",{user_id:n}),Promise.resolve()):void e("config",await t,{update:!0,user_id:n})}(j,P[e.app.options.appId],t,n).catch(e=>A.error(e))}function setUserProperties(e,t,n){e=getModularInstance(e),async function(e,t,n,a){if(a&&a.global){const t={};for(const e of Object.keys(n))t["user_properties."+e]=n[e];return e("set",t),Promise.resolve()}e("config",await t,{update:!0,user_properties:n})}(j,P[e.app.options.appId],t,n).catch(e=>A.error(e))}function setAnalyticsCollectionEnabled(e,t){e=getModularInstance(e),async function(e,t){e=await e;window["ga-disable-"+e]=!t}(P[e.app.options.appId],t).catch(e=>A.error(e))}function setDefaultEventParameters(e){j?j("set",e):_setDefaultEventParametersForInit(e)}function logEvent(e,t,n,a){e=getModularInstance(e),async function(e,t,n,a,r){if(r&&r.global)e("event",n,a);else{const r=await t;e("event",n,Object.assign(Object.assign({},a),{send_to:r}))}}(j,P[e.app.options.appId],t,n,a).catch(e=>A.error(e))}function setConsent(e){j?j("consent","update",e):_setConsentDefaultForInit(e)}const q="@firebase/analytics";t(new Component("analytics",(e,{options:t})=>factory(e.getProvider("app").getImmediate(),e.getProvider("installations-internal").getImmediate(),t),"PUBLIC")),t(new Component("analytics-internal",function(e){try{const a=e.getProvider("analytics").getImmediate();return{logEvent:(e,t,n)=>logEvent(a,e,t,n)}}catch(e){throw k.create("interop-component-reg-failed",{reason:e})}},"PRIVATE")),e(q,"0.10.0"),e(q,"0.10.0","esm2017");export{getAnalytics,getGoogleAnalyticsClientId,initializeAnalytics,isSupported,logEvent,setAnalyticsCollectionEnabled,setConsent,setCurrentScreen,setDefaultEventParameters,setUserId,setUserProperties,settings};